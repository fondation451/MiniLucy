node simple_stopwatch
  (time_unit: bool; reset, start_stop: bool)
returns
  (time: int; running: bool);
let
  time = 0 -> if reset then 0
              else if running and time_unit then pre(time)+1
              else pre(time);
  running = False -> if start_stop then not pre(running)
                     else pre(running);
tel

node stopwatch
  (time_unit: bool; b1, b2: bool)
returns (time: int);
var running, frozen, start_stop, reset, lap: bool;
    internal_time: int;
let
  (internal_time, running) =
      simple_stopwatch(time_unit, reset, start_stop);
  frozen = False -> if lap then not pre(frozen) else pre(frozen);
  start_stop = b1;
  reset = b2 and (True-> not pre(running or frozen));
  lap = b2 and (False -> pre(running or frozen));
  time = if frozen then pre(time) else internal_time;
tel
