node PCOND(
           h0:bool;
           hA,hB,hC:bool;
           A:int ;
           B:int ;
           C:bool;
           hD:bool;
           D:bool )
returns (hX:bool; X:int);
var hX1 : bool when True(h0);
    X1 : int when True(hX1);
    hA_when_h0,hB_when_h0,hC_when_h0 : bool  when True(h0);
    hD_when_hC_when_h0  : bool when True(hC_when_h0);
let

  hX = current(hX1);
  X = current(current(X1));
  hA_when_h0 = hA when True(h0);
  hB_when_h0 = hB when True(h0);
  hC_when_h0 = hC when True(h0);
  hD_when_hC_when_h0 = hD  when True(hC_when_h0);
  (hX1, X1) = PCOND_clk(
           h0,
           hA_when_h0,
           hB when True(h0),
           hC when True(h0),
           A when True(hA_when_h0),
           B when True(hB_when_h0),
           C when True(hC_when_h0),
           hD when True(hC_when_h0),
           D when True(hD_when_hC_when_h0));
tel

node PCOND_clk(
           h0:bool;
           hA,hB,hC:bool when True(h0);
           A:int when True(hA);
           B:int when True(hB);
           C:bool when True(hC);
           hD:bool when True(hC);
           D:bool when True(hD))
returns (hX:bool when True(h0); X:int when True(hX));
let
  hX = hC and current(hD) and ( ( hA and
                                 current(current(D)) )
                               or
                               ( hB and not
                                current(current(D)) ) );

  X = ( if ( hA and current(current(D)) )
        then current(A)
        else current(B)
       ) when True(hX);
tel
