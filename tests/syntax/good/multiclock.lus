node multiclock ( x, y: int; c: bool; z: int )
        returns ( s: int);

let
  s = current(multiclock_clk ( x, y, c, z when True(c) ));
tel

node multiclock_clk ( x, y: int; c: bool; z: int when True(c) )
        returns ( s: int when True(c));
var h: bool when True(c) ;
    u: int when True(h) ;
let
  h = ( True when True(c) ) -> ( ( x + y ) when True(c)) < z ;
  u = ( z when True(h) ) -> moyenne( z when True(h),  pre u ) ;
  s = current u ;
tel

node moyenne( x, y: int ) returns ( m: int );
var s: int;
let
  m = s / 2 ;
  s = x + y ;
tel
